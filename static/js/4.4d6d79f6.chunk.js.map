{"version":3,"sources":["Detail.js"],"names":["Box","styled","div","Title","h4","props","color","Remain","remain","connect","state","reducer","alert","reducer2","useState","al","alChange","useEffect","remains","data","id","timer","setTimeout","clearTimeout","useParams","history","useHistory","shoes","find","e","className","src","width","title","content","price","onClick","newremains","remainChange","dispatch","type","goBack"],"mappings":"2MASIA,EAAMC,IAAOC,IAAV,gDAIHC,EAAQF,IAAOG,GAAV,mEAEK,SAAAC,GAAK,OAAIA,EAAMC,SAkH7B,SAASC,EAAOF,GACZ,OACI,gDAASA,EAAMG,UAYRC,uBARf,SAAaC,GACT,MAAO,CACHA,MAAQA,EAAMC,QACdC,MAAQF,EAAMG,YAKPJ,EA3Hf,SAAgBJ,GAEZ,MAAqBS,oBAAS,GAA9B,mBAAKC,EAAL,KAASC,EAAT,KACA,EAAuBF,mBAAS,GAAhC,mBACA,GADA,UACqBA,oBAAS,IAA9B,6BAEAG,qBAAU,WACHZ,EAAMa,QAAQC,EAAKC,IAAM,IACxBJ,GAAS,GAEb,IAAIK,EAAQC,YAAW,WACnBN,GAAS,KACV,KACH,OAAO,WACHO,aAAaF,MAElB,IAEH,IAAMD,EAAOI,cAAPJ,GACFK,EAAUC,cACVP,EAAOd,EAAMsB,MAAMC,MAAM,SAACC,GAC1B,OAAGA,EAAET,IAAMA,KAOf,OACI,sBAAKU,UAAU,YAAf,UACI,cAAC9B,EAAD,UACI,cAACG,EAAD,CAAO2B,UAAU,MAAjB,sBAIAf,EACI,qBAAKe,UAAU,YAAf,SACI,uFAEN,KAEN,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKC,IAAK,6CAA6CZ,EAAKC,GAAG,GAAG,OAAQY,MAAM,WAEpF,sBAAKF,UAAU,gBAAf,UACI,oBAAIA,UAAU,OAAd,SAAsBX,EAAKc,QAC3B,4BAAId,EAAKe,UACT,4BAAIf,EAAKgB,QAET,cAAC5B,EAAD,CAAQC,OAAUH,EAAMa,QAAQC,EAAKC,MAErC,wBAAQU,UAAU,iBAAiBM,QAAS,WACxC,GAA8B,GAA1B/B,EAAMa,QAAQC,EAAKC,IACnBR,MAAM,iBAEL,CACD,IAAIyB,EAAU,YAAOhC,EAAMa,SAC3BmB,EAAWlB,EAAKC,KAAO,EACvBf,EAAMiC,aAAaD,GACnBhC,EAAMkC,SAAS,CAAEC,KAAO,UAAWrB,KAAOA,MARlD,yDAWA,wBAAQW,UAAU,iBAAiBM,QAAS,WACxCX,EAAQgB,UADZ","file":"static/js/4.4d6d79f6.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport './Detail.scss'\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet Box = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\nlet Title = styled.h4`\r\n    font-size: 25px;\r\n    color: ${ props => props.color };\r\n`;\r\n\r\n\r\n\r\nfunction Detail(props) {\r\n\r\n    let [al, alChange] = useState(false);\r\n    let [tab, tabChange] = useState(0);\r\n    let [sw, swChange] = useState(false);\r\n    \r\n    useEffect(()=>{\r\n        if(props.remains[data.id] < 10){\r\n            alChange(true);\r\n        }\r\n        let timer = setTimeout(()=>{\r\n            alChange(false);\r\n        }, 2000);\r\n        return () => {\r\n            clearTimeout(timer);\r\n        }\r\n    }, []);\r\n\r\n    let { id } = useParams();\r\n    let history = useHistory();\r\n    let data = props.shoes.find( (e) => { \r\n        if(e.id == id){ \r\n            return true; \r\n        } else {\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Box>\r\n                <Title className='red'>Detail</Title>\r\n            </Box>\r\n\r\n            {\r\n                al\r\n                ?   <div className='my-alert2'>\r\n                        <p>재고가 얼마 없어요!!</p>\r\n                    </div>\r\n                : null\r\n            }\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <img src={\"https://codingapple1.github.io/shop/shoes\"+(data.id+1)+\".jpg\"} width=\"100%\" />\r\n                </div>\r\n                <div className=\"col-md-6 mt-4\">\r\n                    <h4 className=\"pt-5\">{data.title}</h4>\r\n                    <p>{data.content}</p>\r\n                    <p>{data.price}</p>\r\n\r\n                    <Remain remain = {props.remains[data.id]}></Remain>\r\n\r\n                    <button className=\"btn btn-danger\" onClick={() => {\r\n                        if (props.remains[data.id] == 0){\r\n                            alert('sold out!');\r\n                        }\r\n                        else {\r\n                            let newremains = [...props.remains];\r\n                            newremains[data.id] -= 1;\r\n                            props.remainChange(newremains);\r\n                            props.dispatch({ type : 'addCart', data : data });\r\n                        }\r\n                    }}>장바구니에 담기</button>\r\n                    <button className=\"btn btn-danger\" onClick={() => {\r\n                        history.goBack();\r\n                    }}>뒤로가기</button> \r\n                </div>\r\n                \r\n            </div>\r\n\r\n            {/* <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"link-0\" onClick={()=>{ swChange(false); tabChange(0); }}>1</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"link-1\" onClick={()=>{ swChange(false); tabChange(1); }}>2</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"link-2\" onClick={()=>{ swChange(false); tabChange(2); }}>3</Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n\r\n            <CSSTransition in={sw} classNames=\"wow\" timeout={500}>\r\n                <TabContent tab={tab} swChange={swChange}></TabContent>\r\n            </CSSTransition> */}\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction TabContent(props){\r\n\r\n    useEffect(()=>{\r\n        props.swChange(true);\r\n    });\r\n\r\n    if(props.tab === 0){\r\n        return <div>0000000000</div>\r\n    }\r\n    else if(props.tab === 1){\r\n        return <div>111111111</div>\r\n    } \r\n    else if(props.tab === 2){\r\n        return <div>22222222</div>\r\n    }\r\n}\r\n\r\n\r\nfunction Remain(props){\r\n    return (\r\n        <p>재고 : {props.remain}</p>\r\n    )\r\n}\r\n\r\nfunction stp(state){\r\n    return {\r\n        state : state.reducer,\r\n        alert : state.reducer2\r\n    }\r\n}\r\n\r\n\r\nexport default connect(stp)(Detail);"],"sourceRoot":""}
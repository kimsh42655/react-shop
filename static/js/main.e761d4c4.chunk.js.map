{"version":3,"sources":["data.js","logo.svg","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","Detail","lazy","Cart","remaincontext","React","createContext","Product","props","history","useHistory","remain","useContext","className","onClick","push","data","src","width","App","useState","shoes","shoesChange","loading","loadingChange","count","countChange","remains","remainChange","Navbar","bg","expand","Container","Brand","to","Toggle","Collapse","Nav","Link","as","NavDropdown","Item","href","Divider","exact","path","Jumbotron","Button","variant","Provider","value","map","a","i","axios","get","then","result","newshoes","newremain","catch","alert","fallback","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaultstate","store","createStore","combineReducers","reducer","action","type","newstate","number","quan","newdata","name","splice","reducer2","ReactDOM","render","StrictMode","basename","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.e761d4c4.chunk.js","sourcesContent":["// eslint-disable-next-line\r\nexport default [\r\n    {\r\n      id : 0,\r\n      title : \"White and Black\",\r\n      content : \"Born in France\",\r\n      price : 120000\r\n    },\r\n  \r\n    {\r\n      id : 1,\r\n      title : \"Red Knit\",\r\n      content : \"Born in Seoul\",\r\n      price : 110000\r\n    },\r\n  \r\n    {\r\n      id : 2,\r\n      title : \"Grey Yordan\",\r\n      content : \"Born in the States\",\r\n      price : 130000\r\n    }\r\n]","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","/* eslint-disable */\n\nimport React, {useContext, useState, lazy, Suspense} from 'react';\nimport { Navbar, Container, Nav, NavDropdown, Jumbotron, Button } from 'react-bootstrap';\nimport logo from './logo.svg';\nimport './App.css';\nimport data from './data.js';\nimport axios from 'axios';\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\n\nlet Detail = lazy(()=>{ return import('./Detail.js') });\nlet Cart = lazy(()=>{ return import('./Cart.js') });\n\nlet remaincontext = React.createContext();\n\n\nfunction App() {\n\n  let [shoes, shoesChange] = useState(data);\n  let [loading, loadingChange] = useState(false);\n  let [count, countChange] = useState(3);\n  let [remains, remainChange] = useState([10,11,12]);\n\n  return (\n    <div className=\"App\">\n\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand><Link to=\"/\">My Shop</Link></Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link as={Link} to='/'>Home</Nav.Link>\n              <Nav.Link as={Link} to='/cart'>장바구니</Nav.Link>\n              <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      <Switch>\n\n        <Route exact path=\"/\">\n          <Jumbotron className=\"background\">\n            <h1>90% 할인 행사!</h1>\n            <p>\n              This is a simple hero unit, a simple jumbotron-style component for calling\n              extra attention to featured content or information.\n            </p>\n            <p>\n              <Button variant=\"primary\">Learn more</Button>\n            </p>\n          </Jumbotron>\n\n          <div className=\"container\">\n\n            <remaincontext.Provider value={remains}>\n\n            <div className=\"row\">\n              {\n                shoes.map((a, i) => {\n                  return (\n                    <Product data = {shoes[i]} key = {i}></Product>\n                  )\n                })\n              }\n            </div>\n\n            </remaincontext.Provider>\n          </div>\n          \n          {\n            loading\n            ? <div>로딩중...</div>\n            : null\n          }\n\n          {\n            count < 6\n            ? <button className=\"btn btn-primary\" onClick={() => {\n\n                loadingChange(true);\n    \n                axios.get('https://codingapple1.github.io/shop/data2.json')\n                .then((result)=>{\n    \n                  loadingChange(false);\n    \n                  const newshoes = [...shoes,...result.data];\n                  shoesChange(newshoes);\n                  countChange(count + 3);\n                  const newremain = [...remains, 8,9,10];\n                  remainChange(newremain);\n\n                })\n                .catch(()=>{\n                  loadingChange(false);\n                  alert('loading failed!');\n                })\n              }}>더보기</button>\n            : null\n          }\n          \n        </Route>\n\n        <Route path=\"/detail/:id\">\n          <Suspense fallback={ <div>loading...</div> }>\n            <Detail shoes = {shoes} remains = {remains} remainChange = {remainChange}></Detail>\n          </Suspense>\n        </Route>\n\n        <Route path=\"/cart\">\n          <Suspense fallback={ <div>loading...</div> }>\n            <Cart remains = {remains} remainChange = {remainChange}></Cart>\n          </Suspense>\n        </Route>\n\n\n        <Route path=\"/:id\">\n          <div>잘못된 페이지</div>\n        </Route>\n\n      </Switch>\n    </div>\n  );\n}\n\nfunction Product(props) {\n\n  let history = useHistory();\n\n  let remain = useContext(remaincontext);\n\n  return (\n    <div className=\"col-md-4 product\" onClick={()=>{ history.push('/detail/'+props.data.id) }}>\n      <img src={\"https://codingapple1.github.io/shop/shoes\"+(props.data.id+1)+\".jpg\"} width=\"100%\" />\n      <h4>{ props.data.title }</h4>\n      <p>{ props.data.content } & { props.data.price }</p>\n      <p>재고 : {remain[props.data.id]}</p>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nimport {Provider} from 'react-redux';\nimport { combineReducers, createStore } from 'redux';\n\nlet defaultstate = [\n  // { id : 0, name : \"niceshoes\", quan : 7 },\n  // { id : 1, name : \"badshoes\", quan : 1},\n  // { id : 2, name : \"sososhoes\", quan : 3},\n];\n\nfunction reducer(state = defaultstate, action){\n  if ( action.type === 'increase' ){\n    let newstate = [...state];\n    newstate[action.number].quan++;\n    return newstate;\n  } \n  else if( action.type === 'decrease' ){\n    if(state[action.number].quan === 0){\n      alert(\"doesn't exist!\");\n      return state;\n    }\n    else {\n      let newstate = [...state];\n      newstate[action.number].quan--;\n      return newstate;\n    }\n  }\n  else if( action.type === 'addCart' ){\n    let newstate = [...state];\n    for (const i of newstate){\n      if(i.id === action.data.id){\n        i.quan++;\n        return newstate;\n      }\n    }\n    let newdata = { id : action.data.id, name : action.data.title, quan : 1 }\n    newstate.push(newdata);\n    return newstate;\n  }\n  else if( action.type === 'delete'){\n    let newstate = [...state];\n    newstate.splice(action.number, 1);\n    return newstate;\n  }\n  else {\n    return state;\n  }\n}\n\nlet defaultalert = true;\n\nfunction reducer2(state = defaultalert, action){\n  if ( action.type === 'close' ){\n    return false;\n  }\n  return state;\n}\n\nlet store = createStore(combineReducers({reducer, reducer2}));\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/react-shop\">\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}